#
# Εργαστήριο ΛΣ 1 / Άσκηση 2 / Ερώτηση 1 / 2021-2022
# Ονοματεπώνυμο   : Αθανασίου Βασίλειος Ευάγγελος
# Αριθμός Μητρώου : 19390005
#
-----------------------------------------------------------------------------
# Ερώτηση 1.
# Να γραφτεί "script" με το όνομα "searching" το οποίο (α) να δέχεται ως 
# ορίσματα δύο ακεραίους αριθμούς και (β) να ζητάει από το χρήστη το όνομα 
# ενός καταλόγου, και με βάση αυτά να εμφανίζει στην οθόνη τα ακόλουθα (τα 
# "1-3" με χρήση της εντολής "find" και τα "4-5" με συνδυασμό των εντολών 
# "ls" και "grep"):
# 1. Τα αρχεία του δέντρου του δοθέντος καταλόγου με εξουσιοδοτήσεις 
# (permissions) τον πρώτο αριθμό (όρισμα) θεωρώντας τον ως οκταδικό 
# ισοδύναμο.
# 2. Τα αρχεία του δέντρου του δοθέντος καταλόγου που άλλαξαν (modify) 
# περιεχόμενα κατά τις ‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός 
# (όρισμα).
# 3. Τους υποκαταλόγους του δέντρου του δοθέντος καταλόγου που προσπελάστη-
# καν (access) κατά τις ‘x’ τελευταίες μέρες, όπου ‘x’ ο δεύτερος αριθμός 
# (όρισμα).
# 4. Τα αρχεία του δοθέντος καταλόγου στα οποία έχουν δικαίωμα ανάγνωσης ο- 
# λοι οι χρήστες.
# 5. Τους υποκαταλόγους του δοθέντος καταλόγου στους οποίους έχουν δικαίωμα 
# αλλαγών (create/rename/delete files) εκτός από τον ιδιοκτήτη και άλλοι 
# χρήστες του συστήματος.
# Πριν από τον εκτύπωση κάθε λίστας από τις παραπάνω (1 έως 5) να τυπώνεται 
# κατάλληλη επικεφαλίδα η οποία να αναφέρει μεταξύ άλλων και τον αριθμό των 
# αρχείων (ή υποκαταλόγων) που πρόκειται να τυπωθούν. Το "script" να εκτε-
# λείται επαναληπτικά όσο επιθυμεί ο χρήστης (για διαφορετικούς καταλο- 
# γους) και στο τέλος (πριν την τελική έξοδο) να εμφανίζει αθροιστικά το
# συνολικό αριθμό των ευρεθέντων (αρχείων / υποκαταλόγων) κάθε περίπτωσης  
# (από τις 1 έως 6) για όλους τους καταλόγους στους οποίους έψαξε.
#
# Απάντηση: Παρακάτω, έχουμε το "script" με όνομα "searching.sh" που απαντάει στην "Ερώτηση
# 1", καθώς και την τεκμηρίωση του πηγαίου κώδικα. Αρχικά, για να τρεξει, χωρίς κανένα πρό-
# βλημα, με την εντολή "chmod u+x searching.sh" δίνουμε το δικαίωμα στον "user" να εκτελέ-
# σει το "shell script". Τέλος, με το "path" "./searching.sh $1 $2", τρέχουμε το "script", 
# όπου "$1" η πρώτη παράμετρος και "$2" η δεύτερη παράμετρος, όπου εξηγούνται αναλυτικά στην 
# τεκμηρίωση.

chmod u+x searching.sh
./searching.sh $1 $2

# ΠΗΓΑΙΟΣ ΚΩΔΙΚΑΣ

#! /bin/bash

if [[ $# -ne 2 ]]; then
  echo "Error in parameters"
  echo "Script $0 needs permissions in octal and number of days"
  exit 125
fi

num_octal_per=$1
num_days=$2
all_files_subdir=0

while (true)
do

  echo " "
  echo "============================================================="
  echo " "
  read -p "Type the name of a directory : " name_dir
  echo " "
  if [[ ! -e $name_dir ]]; then
    echo " "
    echo "Directory does not exist in the operating system"
    echo " "
    echo "Overall number of printed files and subdirectories : $all_files_subdir"
    echo " "
    exit 124
  else
    errors1=0
    num_files1=`find $name_dir -type f -perm $num_octal_per | wc -l`
    echo "-------------------------------------------------------------"
    echo "OPERATION 1"
    echo " "
    echo "Number of expectedly printed files : $num_files1"
    echo " "
    find $name_dir -type f -perm $num_octal_per
    errors1=$?
    echo " "

    if [[ $errors1 -ne 0 ]]; then
      echo "Find was executed with errors"
      echo "Give new parameters"
      echo " "
      exit 301
    fi

    errors2=0
    num_files2=`find $name_dir -type f -mtime $num_days | wc -l`
    echo "-------------------------------------------------------------"
    echo "OPERATION 2"
    echo " "
    echo "Number of expectedly printed files : $num_files2"
    echo " "
    find $name_dir -type f -mtime $num_days
    errors2=$?
    echo " "

    if [[ $errors2 -ne 0 ]]; then
      echo "Find was executed with errors"
      echo "Give new parameters"
      echo " "
      exit 101
    fi

    errors3=0
    num_subdir3=`find $name_dir -type d -atime $num_days | wc -l`
    echo "-------------------------------------------------------------"
    echo "OPERATION 3"
    echo " "
    echo "Number of expectedly printed subdirectories : $num_subdir3"
    echo " "
    find $name_dir -type d -atime $num_days
    errors3=$?
    echo " "

    if [[ $errors3 -ne 0 ]]; then
      echo "Find was executed with errors"
      echo "Give new parameters"
      echo " "
      exit 169
    fi

    num_files4=`ls -al $name_dir | grep ^-r..r..r | wc -l`
    echo "------------------------------------------------------------"
    echo "OPERATION 4"
    echo " "
    echo "Number of expectedly printed files : $num_files4"
    echo " "
    ls -al $name_dir | grep ^-r..r..r
    echo " "
    num_subdir5=`ls -al $name_dir | grep ^d.w..w..w | wc -l`
    echo "-------------------------------------------------------------"
    echo "OPERATION 5"
    echo " "
    echo "Number of expectedly printed subdirectories : $num_subdir5"
    echo " "
    ls -al $name_dir | grep ^d.w..w..w
    all_files_subdir=$(($all_files_subdir+$(($num_files1+$num_files2+
    $num_subdir3+$num_files4+$num_subdir5))))
    echo " "
    echo "============================================================="
  fi
  echo " "
  read -p "Type 1 for continue or 0 for end of searching : " num_loop
  echo " "
  if [[ num_loop -eq 0 ]]; then
    echo "============================================================="
    echo " "
    echo "End of searching"
    echo " "
    echo "Overall number of printed files and subdirectories : $all_files_subdir"
    echo " "
    exit 0
  fi
done

# ΤΕΚΜΗΡΙΩΣΗ
#
# ΕΛΕΓΧΟΣ ΠΛΗΘΟΥΣ ΠΑΡΑΜΕΤΡΩΝ
# Το "script" ξεκινάει με τον έλεγχο του πλήθους των παραμέτρων που βάζει ο χρήστης.
# Πιο αναλυτικά, με μία εντολή ελέγχου "if" ελέγχει αν το πλήθος των παραμέτρων είναι
# "2". Αν δεν είναι "2", τότε με την εντολή "echo" τυπώνει από τη "standard output" τα
# μηνύματα "Error in parameters" και "Script $0 needs permissions in octal and number 
# of days", όπου "$0" είναι το περιεχόμενο της παραμέτρου "0" που είναι το όνομα του 
# "shell script" (searching.sh). Αν είναι "2" η ροή του προγράμματος μεταφέρεται στις
# επόμενες εντολές.
#
# ΠΑΡΑΜΕΤΡΟΙ / ΜΕΤΑΒΛΗΤΕΣ
# Στη μεταβλητή "num_octal_per" εκχωρείται το περιεχόμενο της πρώτης παραμέτρου που 
# είναι ένας τριψήφιος ακέραιος αριθμός, όπου παίζει τον ρόλο του οκταδικού ισοδύναμου
# για τα δικαιώματα ενός αρχείου ή καταλόγου (π.χ 777).
# Στη μεταβλητή "num_days" εκχωρείται το περιεχόμενο της δεύτερης παραμέτρου που είναι 
# ένας ακέραιος αριθμός, που δηλώνει ένα πλήθος ημερών.
# Στη μεταβλητή "all_files_subdir" εκχωρείται η τιμή "0" ως πρώτη τιμή για τον υπολογι-
# σμό του συνολικού πλήθους αρχείων και υποκαταλόγων που αναζητήθηκαν.
# 
# ΒΡΟΧΟΣ
# Με την εντολή επανάληψης "while" και με συνθήκη "true" εκτελείται το "script" επανειλη-
# μμένα μέχρι να δοθεί στη συνθήκη επανάληψης η τιμή "false" (0).
#
# ΕΙΣΟΔΟΣ ΟΝΟΜΑΤΟΣ ΚΑΤΑΛΟΓΟΥ
# Με την εντολή "read" ο χρήστης διαβάζει από τη "standard input" το όνομα ενός καταλόγου
# και εκχωρείται στη μεταβλητή "name_dir". Με την παράμετρο "-p" η είσοδος συνοδεύεται με
# το μήνυμα "Type the name of a directory : ".
#
# ΕΛΕΓΧΟΣ ΥΠΑΡΞΗΣ ΔΟΘΕΝΤΟΣ ΚΑΤΑΛΟΓΟΥ
# Με μία εντολή ελέγχου "if-else" ελέγχουμε αν ο δοθέντας κατάλογος υπάρχει στο λειτουργι-
# κό σύστημα (! -e $name_dir). Αν δεν υπάρχει, τότε εκτελούνται οι εντολές της "if" που 
# είναι "2" εντολές "echo" που τυπώνουν τα μηνύματα "Directory does not exist in the 
# operating system" και "Overall number of printed files and subdirectories : 
# $all_files_subdir", όπου "$all_files_subdir" το περιεχόμενο της μεταβλητής. Επίσης, η
# εντολή "exit 124" τερματίζει το πρόγραμμα επιστρέφοντας την τιμή "124" (τιμή σφάλματος).
#
# ΛΕΙΤΟΥΡΓΙΕΣ 1, 2, 3, 4, 5
# Εφόσον, υπάρχει ο δοθέντας κατάλογος από τον "έλεγχο ύπαρξης δοθέντος καταλόγου", εκτελού-
# νται οι εντολές της "else", όπου είναι οι "5" λειτουργίες που απαντούν στα "5" ζητούμενα
# της "Ερώτησης 1".
#
# ΛΕΙΤΟΥΡΓΙΑ 1
# Στη λειτουργία "1" εκχωρείται αρχικά, στη μεταβλητή "errors1" η τιμή "0" σαν πρώτη τιμή
# της βοηθητικής μεταβλητής για την ύπαρξη λαθών στις εντολές που θα εκτελέσουν την λειτου-
# ργία "1". Στη μεταβλητή "num_files1" εκχωρείται το αποτέλεσμα της εντολής "find $name_dir 
# -type f -perm $num_octal_per | wc -l", όπου βρίσκει (find) στον κατάλογο ($name_dir) που 
# έχει δώσει ο χρήστης τα αρχεία (-type f), όπου έχουν "permissions" (-perm) το πρώτο όρι-
# σμα ($num_octal_per) που επίσης, έχει δώσει ο χρήστης. Η εντολή "wc -l" επιστρέφει το πλή-
# θος των γραμμών που επέστρεψε στη "standard output" η εντολή "find", χάρις στη σωλήνωση
# (|) των δύο εντολών. Με την εντολή "echo" τυπώνεται το μήνυμα "Number of expectedly 
# printed files : $num_files1", όπου, "$num_files1" το περιεχόμενο της μεταβλητής 
# "num_files1". Τέλος, η εντολή "find $name_dir -type f -perm $num_octal_per" τυπώνει τα 
# επιθυμητά αρχεία του δοθέντους καταλόγου και στη μεταβλητή "errors1" εκχωρείται το περιε-
# χόμενο "$?" που είναι η τιμή που επιστρέφει η αμέσως προηγούμενη εντολή (find).
#
# ΕΛΕΓΧΟΣ ΛΑΘΩΝ ΛΕΙΤΟΥΡΓΙΑΣ 1
# Με μία εντολή ελέγχου "if" ελέγχεται το περιεχόμενο της "errors1". Αν δεν περιέχει την 
# τιμή "0", τότε, τυπώνονται με την "echo" τα μηνύματα "Find was executed with errors"
# και "Give new parameters" και η εντολή "exit" τερματίζει το πρόγραμμα επιστρέφοντας 
# στο λειτουργικό σύστημα την τιμή "301" (τιμή σφάλματος). 
#
# ΛΕΙΤΟΥΡΓΙΑ 2
# Στη λειτουργία "2" εκχωρείται αρχικά, στη μεταβλητή "errors2" η τιμή "0" σαν πρώτη τιμή
# της βοηθητικής μεταβλητής για την ύπαρξη λαθών στις εντολές που θα εκτελέσουν την λειτου-
# ργία "2". Στη μεταβλητή "num_files2" εκχωρείται το αποτέλεσμα της εντολής "find $name_dir 
# -type f -mtime $num_days | wc -l", όπου βρίσκει (find) στον κατάλογο ($name_dir) που 
# έχει δώσει ο χρήστης τα αρχεία (-type f), όπου άλλαξαν περιεχόμενα κατά τις "$num_days" 
# τελευταίες μέρες (-mtime) που επίσης, έχει δώσει ο χρήστης. Η εντολή "wc -l" επιστρέφει 
# το πλήθος των γραμμών που επέστρεψε στη "standard output" η εντολή "find", χάρις στη 
# σωλήνωση (|) των δύο εντολών. Με την εντολή "echo" τυπώνεται το μήνυμα "Number of 
# expectedly printed files : $num_files2", όπου, "$num_files2" το περιεχόμενο της μεταβλη-
# τής "num_files2". Τέλος, η εντολή "find $name_dir -type f -mtime $num_days" τυπώνει 
# τα επιθυμητά αρχεία του δοθέντους καταλόγου και στη μεταβλητή "errors2" εκχωρείται το 
# περιεχόμενο "$?" που είναι η τιμή που επιστρέφει η αμέσως προηγούμενη εντολή (find).
#
# ΕΛΕΓΧΟΣ ΛΑΘΩΝ ΛΕΙΤΟΥΡΓΙΑΣ 2
# Με μία εντολή ελέγχου "if" ελέγχεται το περιεχόμενο της "errors2". Αν δεν περιέχει την 
# τιμή "0", τότε, τυπώνονται με την "echo" τα μηνύματα "Find was executed with errors"
# και "Give new parameters" και η εντολή "exit" τερματίζει το πρόγραμμα επιστρέφοντας 
# στο λειτουργικό σύστημα την τιμή "101" (τιμή σφάλματος).
#
# ΛΕΙΤΟΥΡΓΙΑ 3
# Στη λειτουργία "3" εκχωρείται αρχικά, στη μεταβλητή "errors3" η τιμή "0" σαν πρώτη τιμή
# της βοηθητικής μεταβλητής για την ύπαρξη λαθών στις εντολές που θα εκτελέσουν την λειτου-
# ργία "3". Στη μεταβλητή "num_subdir3" εκχωρείται το αποτέλεσμα της εντολής "find $name_dir 
# -type d -atime $num_days | wc -l", όπου βρίσκει (find) στον κατάλογο ($name_dir) που 
# έχει δώσει ο χρήστης τoυς υποκαταλόγους (-type d), όπου προσπελάστηκαν κατά τις "$num_days" 
# τελευταίες μέρες (-atime) που επίσης, έχει δώσει ο χρήστης. Η εντολή "wc -l" επιστρέφει 
# το πλήθος των γραμμών που επέστρεψε στη "standard output" η εντολή "find", χάρις στη 
# σωλήνωση (|) των δύο εντολών. Με την εντολή "echo" τυπώνεται το μήνυμα "Number of 
# expectedly printed subdirectories : $num_subdir3", όπου, "$num_subdir3" το περιεχόμενο 
# της μεταβλητής "num_subdir3". Τέλος, η εντολή "find $name_dir -type f -mtime $num_days" 
# τυπώνει τους επιθυμητούς υποκαταλόγους του δοθέντους καταλόγου και στη μεταβλητή "errors3"
# εκχωρεί ται το περιεχόμενο "$?" που είναι η τιμή που επιστρέφει η αμέσως προηγούμενη 
# εντολή (find).
#
# ΕΛΕΓΧΟΣ ΛΑΘΩΝ ΛΕΙΤΟΥΡΓΙΑΣ 3
# Με μία εντολή ελέγχου "if" ελέγχεται το περιεχόμενο της "errors3". Αν δεν περιέχει την 
# τιμή "0", τότε, τυπώνονται με την "echo" τα μηνύματα "Find was executed with errors"
# και "Give new parameters" και η εντολή "exit" τερματίζει το πρόγραμμα επιστρέφοντας 
# στο λειτουργικό σύστημα την τιμή "169" (τιμή σφάλματος).
#
# ΛΕΙΤΟΥΡΓΙΑ 4
# Στη λειτουργία "4", αρχικά, στη μεταβλητή "num_files4" εκχωρείται το αποτέλεσμα της εντό-
# λής "ls -al $name_dir | grep ^-r..r..r | wc -l", όπου, εμφανίζει όλα τα περιεχόμενα (-a)
# του καταλόγου "$name_dir" με τις ιδιότητες τους (-l), που έχει δώσει ο χρήστης. Η εντολή
# "grep ^-r..r..r" κάνει "match" τα "patterns" που επέστρέψε η εντολή "ls -al $name_dir" 
# (χάρις στη σωλήνωση των δύο εντολών (|)) στο "standard output", όπου ξεκινάνε (^) με το 
# πρότυπο "-r..r..r", δηλαδή, τα αρχεία του καταλόγου "$name_dir" που έχουν δικαίωμα ανά-
# γνωσης (r) όλοι οι χρήστες. Η εντολή "wc -l" επιστρέφει το πλήθος των γραμμών που επέ-
# στρεψε στη "standard output" η σωλήνωση των εντολών "ls" και "grep", χάρις στη σωλήνωση 
# (|) των τριών εντολών. Με την εντολή "echo" τυπώνεται το μήνυμα "Number of expectedly
# printed files : $num_files4", όπου, "$num_files4" το περιεχόμενο της μεταβλητής 
# "num_files4". Τέλος, η εντολή "ls -al $name_dir | grep ^-r..r..r" τυπώνει τα επιθυμητά
# αρχεία του δοθέντος καταλόγου.
#
# ΛΕΙΤΟΥΡΓΙΑ 5
# Στη λειτουργία "5", αρχικά, στη μεταβλητή "num_subdir5" εκχωρείται το αποτέλεσμα της εντό-
# λής "ls -al $name_dir | grep ^d.w..w..w | wc -l", όπου, εμφανίζει όλα τα περιεχόμενα (-a)
# του καταλόγου "$name_dir" με τις ιδιότητες τους (-l), που έχει δώσει ο χρήστης. Η εντολή
# "grep ^d.w..w..w" κάνει "match" τα "patterns" που επέστρέψε η εντολή "ls -al $name_dir" 
# (χάρις στη σωλήνωση των δύο εντολών (|)) στο "standard output", όπου ξεκινάνε (^) με το 
# πρότυπο "^d.w..w..w", δηλαδή, τους υποκαταλόγους του καταλόγου "$name_dir" που έχουν δι-
# καίωμα αλλαγών (create/rename/delete files) (w) εκτός από τον ιδιοκτήτη και άλλοι χρήστες
# του συστήματος. Η εντολή "wc -l" επιστρέφει το πλήθος των γραμμών που επέστρεψε στη 
# "standard output" η σωλήνωση των εντολών "ls" και "grep", χάρις στη σωλήνωση (|) των τρι-
# ών εντολών. Με την εντολή "echo" τυπώνεται το μήνυμα "Number of expectedly printed 
# subdirectories : $num_subdir5", όπου, "$num_subdir5" το περιεχόμενο της μεταβλητής 
# "num_subdir5". Τέλος, η εντολή "ls -al $name_dir | grep ^d.w..w..w" τυπώνει τους επιθυμη-
# τούς υποκαταλόγους του καταλόγου.
#
# ΕΙΣΟΔΟΣ ΤΙΜΗ ΕΛΕΓΧΟΥ ΤΟΥ ΒΡΟΧΟΥ
# Με την εντολή "read" διαβάζεται από τη "standard input" ένας ακέραιος αριθμός και εκχωρεί-
# ται στη μεταβλητή "num_loop".  Με την παράμετρο "-p" η είσοδος συνοδεύεται με το μήνυμα 
# "Type 1 for continue or 0 for end of searching : ". Με είσοδο την τιμή "1" (true) o βρό-
# χος συνεχίζεται με την είσοδο νέου καταλόγου για αναζήτηση, ενώ με την τιμή "0" (false)
# ο βρόχος διακόπτεται.
#
# ΕΛΕΓΧΟΣ ΤΙΜΗΣ ΕΛΕΓΧΟΥ ΤΟΥ ΒΡΟΧΟΥ
# Με την εντολή "if" ελέγχεται το περιεχόμενο της "num_loo", της τιμής ελέγχου του βρόχου.
# Αν η μεταβλητή περιέχει την τιμή "0" τότε τυπώνονται με την "echo" τα μηνύματα "End of 
# searching" και "Overall number of printed files and subdirectories : $all_files_subdir",
# όπου, "$all_files_subdir" το περιεχόμενο της μεταβλητής "all_files_subdir" και σαφώς, το
# συνολικό πλήθος αρχείων και υποκαταλόγων από όλους τους καταλόγους που δόθηκαν για αναζή-
# τηση. Τέλος, με την εντολή "exit 0" επιστρέφει στο λειτουργικό σύστημα τη τιμή "0".
#
#
# ΠΑΡΑΔΕΙΓΜΑΤΑ
#
# 
# ΠΑΡΑΔΕΙΓΜΑ 1
#
# Αποτέλεσμα εκτέλεσης της εντολής "./searching.sh" :
#
# Error in parameters
# Script ./searching.sh needs permissions in octal and number of days
#
# 
# ΠΑΡΑΔΕΙΓΜΑ 2
#
# Αποτέλεσμα εκτέλεσης της εντολής "./searching.sh 664 0" :
#
# =============================================================
#
# Type the name of a directory : Documents
# 
# -------------------------------------------------------------
# OPERATION 1
#
# Number of expectedly printed files : 1
#
# Documents/file3
#
# -------------------------------------------------------------
# OPERATION 2
#
# Number of expectedly printed files : 0
#
# 
# -------------------------------------------------------------
# OPERATION 3
# 
# Number of expectedly printed subdirectories : 5
#
# Documents
# Documents/datafolder1
# Documents/dbfolder1
# Documents/dbfolder2
# Documents/datafolder2
#
# ------------------------------------------------------------
# OPERATION 4
#
# Number of expectedly printed files : 1
#
# -rw-rw-r--  1 ice19390005 ice19390005    0 Jan 21 02:17 file3
#
# -------------------------------------------------------------
# OPERATION 5
# 
# Number of expectedly printed subdirectories : 0
#
#
# =============================================================
#
# Type 1 for continue or 0 for end of searching : 1
#
#
# =============================================================
#
# Type the name of a directory : Root
#
# -------------------------------------------------------------
# OPERATION 1
#
# Number of expectedly printed files : 2
#
# Root/file2
# Root/file1
#
# -------------------------------------------------------------
# OPERATION 2
# 
# Number of expectedly printed files : 0
#
#
# -------------------------------------------------------------
# OPERATION 3
# 
# Number of expectedly printed subdirectories : 1
#
# Root
#
# ------------------------------------------------------------
# OPERATION 4
#
# Number of expectedly printed files : 2
#
# -rw-rw-r--  3 ice19390005 ice19390005    0 Jan 22 12:48 file1
# -rw-rw-r--  3 ice19390005 ice19390005    0 Jan 22 12:48 file2
#
# -------------------------------------------------------------
# OPERATION 5
#
# Number of expectedly printed subdirectories : 0
#
#
# =============================================================
#
# Type 1 for continue or 0 for end of searching : 0
#
# =============================================================
#
# End of searching
#
# Overall number of printed files and subdirectories : 12
#
#
# ΠΑΡΑΔΕΙΓΜΑ 3
#
# Αποτέλεσμα εκτέλεσης της εντολής "./searching.sh 777 2" :
#
# =============================================================
#
# Type the name of a directory : dir
#
#
# Directory does not exist in the operating system
#
# Overall number of printed files and subdirectories : 0





